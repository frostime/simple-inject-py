name: Create Release and Publish

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pdm twine
    - name: Build package
      run: pdm build
    - name: Get version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/v}
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/simple_inject-${{ steps.get_version.outputs.VERSION }}.tar.gz
        asset_name: simple_inject-${{ steps.get_version.outputs.VERSION }}.tar.gz
        asset_content_type: application/gzip
    # - name: Publish to PyPI
    #   env:
    #     TWINE_USERNAME: __token__
    #     TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
    #   run: |
    #     twine upload dist/*